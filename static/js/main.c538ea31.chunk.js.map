{"version":3,"sources":["Thumbnail.js","Header.js","Display.js","App.js","serviceWorker.js","index.js"],"names":["Thumbnail","props","className","href","this","link","src","imageurl","React","Component","Header","createFeaturedThumbnail","article","i","key","createGeneralThumbnail","Display","featuredArticles","articles","map","generalArticles","ArticlesWrapper","styled","div","App","state","data","Tabletop","init","callback","googleData","console","log","setState","simpleSheet","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"oVAIqBA,G,wDACpB,WAAYC,GAAO,uCACZA,G,qDAIN,OACC,yBAAKC,UAAU,uBACd,uBAAGC,KAAMC,KAAKH,MAAMI,MACnB,yBAAKC,IAAKF,KAAKH,MAAMM,iB,GATaC,IAAMC,YCAxBC,G,wDACpB,WAAYT,GAAO,uCACZA,G,qDAKN,OACE,yBAAKC,UAAU,eAAeI,IAAI,0G,GARFE,IAAMC,YCItCE,G,MAA0B,SAACC,EAASC,GACvC,GAAGA,EAHiB,EAInB,OACC,kBAAC,EAAD,CAAWC,IAAKD,EAAGN,SAAUK,EAAQL,SAAUF,KAAMO,EAAQP,SAK5DU,EAAyB,SAACH,EAASC,GACtC,GAAGA,EAXiB,EAYnB,OACC,kBAAC,EAAD,CAAWC,IAAKD,EAAGN,SAAUK,EAAQL,SAAUF,KAAMO,EAAQP,QAK3CW,E,kDACpB,WAAYf,GAAO,uCACZA,G,qDAIN,IAAIgB,EAAmBb,KAAKH,MAAMiB,SAASC,IAAIR,GAC3CS,EAAkBhB,KAAKH,MAAMiB,SAASC,IAAIJ,GAC9C,OACC,yBAAKb,UAAU,qBACd,kBAAC,EAAD,MACCe,EACAG,O,GAZgCZ,IAAMC,W,8LCjB3C,IAYMY,EAAkBC,IAAOC,IAAV,KA4CNC,E,kDApCX,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,KAAM,IAHI,E,gEAOO,IAAD,OAElBC,IAASC,KAAK,CACZd,IApBM,+CAqBNe,SAAU,SAAAC,GACRC,QAAQC,IAAI,4BAA0BF,GACtC,EAAKG,SAAS,CACZP,KAAMI,KAGVI,aAAa,M,+BAKjBH,QAAQC,IAAI,wBAAsB5B,KAAKqB,OACtBrB,KAAKqB,MAAdC,KAER,OACE,yBAAKxB,UAAU,OACb,kBAACmB,EAAD,KACE,kBAAC,EAAD,CAASH,SAAYd,KAAKqB,OAASrB,KAAKqB,MAAMC,a,GA7BtCjB,aCdE0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLrB,QAAQqB,MAAMA,EAAMC,c","file":"static/js/main.c538ea31.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Thumbnail.css\"\n\nexport default class Thumbnail extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"thumbnail-container\">\n\t\t\t\t<a href={this.props.link}>\n\t\t\t\t\t<img src={this.props.imageurl}/>\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from \"react\";\n\nimport \"./Header.css\"\n\nexport default class Header extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t\t<img className=\"header-image\" src=\"https://arc-anglerfish-arc2-prod-spectator.s3.amazonaws.com/public/ZKALKJLFQFECNGLNTICSJUMFF4.png\"/>\n\t\t);\n\t};\n}\n","import Thumbnail from \"./Thumbnail\";\nimport Header from \"./Header\";\nimport React from \"react\";\n\nimport \"./Display.css\"\n\nconst NUM_FEATURED = 2;\n\nlet createFeaturedThumbnail = (article, i) => {\n\tif(i < NUM_FEATURED){\n\t\treturn(\n\t\t\t<Thumbnail key={i} imageurl={article.imageurl} link={article.link}/>\n\t\t);\n\t}\n};\n\nlet createGeneralThumbnail = (article, i) => {\n\tif(i > NUM_FEATURED){\n\t\treturn(\n\t\t\t<Thumbnail key={i} imageurl={article.imageurl} link={article.link}/>\n\t\t);\n\t}\n};\n\nexport default class Display extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\tvar featuredArticles = this.props.articles.map(createFeaturedThumbnail);\n\t\tvar generalArticles = this.props.articles.map(createGeneralThumbnail);\n\t\treturn (\n\t\t\t<div className=\"display-container\">\n\t\t\t\t<Header/>\n\t\t\t\t{featuredArticles}\n\t\t\t\t{generalArticles}\n\t\t\t</div>\n\t\t);\n\t};\n}\n","import React, { Component } from \"react\";\nimport Display from \"./Display\";\nimport './App.css';\nimport Tabletop from 'tabletop';\nimport styled from 'styled-components';\n\n\nconst example_articlejson = [\n{\"link\": \"https://www.columbiaspectator.com/news/2019/11/11/university-senate-launches-childcare-affordability-initiative-to-support-student-parents/\", \"imageurl\": \"https://arc-anglerfish-arc2-prod-spectator.s3.amazonaws.com/public/C6UR3YSF3BBSXBN65VW5TMUVAA.jpg\"},\n{\"link\": \"https://www.columbiaspectator.com/news/2019/10/28/morningside-heights-smoke-shops-say-new-york-states-e-cigarette-bill-could-devastate-their-businesses/\",\t\"imageurl\": \"https://arc-anglerfish-arc2-prod-spectator.s3.amazonaws.com/public/FMY3H6ANI5AYBM23GY5VI4QLUY.jpg\"},\n{\"link\": \"https//www.columbiaspectator.com/sports/2019/10/19/football-defeats-penn-44-6-in-largest-homecoming-victory-in-programs-149-year-history/\", \"imageurl\": \"https://arc-anglerfish-arc2-prod-spectator.s3.amazonaws.com/public/JV3NGZQ75ZADBLVIA6PW65WIRU.jpg\"},\n{\"link\": \"https://www.columbiaspectator.com/sports/2019/10/14/camacho-ferral-claims-first-place-as-columbia-women-test-younger-runners-at-metropolitan-xc-championships/\", \"imageurl\":\"https://arc-anglerfish-arc2-prod-spectator.s3.amazonaws.com/public/VZQE577BRJA2NEEZSDD2WBEOMM.jpg\"},\n{\"link\": \"https://www.columbiaspectator.com/arts-and-entertainment/2019/10/10/more-than-a-market-columbias-greenmarket-sellers-discuss-the-cultural-impact-of-farmers-markets/\", \"imageurl\": \"https://arc-anglerfish-arc2-prod-spectator.s3.amazonaws.com/public/Y5ZQFHXBEFG5NACRMFZF2MYZEE.jpg\"},\n{\"link\": \"https://www.columbiaspectator.com/news/2019/10/09/former-assistant-provost-at-the-new-school-appointed-associate-dean-of-core-curriculum/\", \"imageurl\": \"https://arc-anglerfish-arc2-prod-spectator.s3.amazonaws.com/public/QTZKPHJUPZH2XLGIW53OK54WTE.jpg\"},\n{\"link\": \"https//www.columbiaspectator.com/news/2019/10/03/qa-inaugural-vp-of-student-affairs-joseph-greenwell-shares-personal-history-talks-most-pressing-campus-issues/\", \"imageurl\": \"https://arc-anglerfish-arc2-prod-spectator.s3.amazonaws.com/public/KXJHQTUCTNCRZPI33JCVGOFIRA.jpg\"}\n];\n\nconst KEY_1 = '1iQjvIWgwD4OWgXZ1X3OdDBtJHpr-ku6ajFp8LrxQWkA';\n\nconst ArticlesWrapper = styled.div`\n  margin-left: 1vw;\n  margin-right: 1vw;\n  margin-top: 1vh;\n  margin-bottom: 1vh;\n`\n\nclass App extends Component {\n    constructor() {\n      super();\n      this.state = {\n        data: []\n      }\n    }\n\n    componentDidMount() {\n      // Load the Google Sheets Data\n      Tabletop.init({\n        key: KEY_1,\n        callback: googleData => {\n          console.log('google sheet data --->', googleData)\n          this.setState({\n            data: googleData\n          })\n        },\n        simpleSheet: true\n      })\n    }\n\n  render() {\n    console.log('updated state --->', this.state);\n    const { data } = this.state\n    \n    return (\n      <div className=\"App\">\n        <ArticlesWrapper>\n          <Display articles = {this.state && this.state.data}/>\n        </ArticlesWrapper>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}